apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: {{ .Release.Name }}
  labels:
    {{- include "spark-driver.labels" . | nindent 4 }}
spec:
  schedule: {{ .Values.spec.schedule | quote }}
  concurrencyPolicy: {{ .Values.spec.concurrencyPolicy }}
  successfulJobsHistoryLimit: {{ .Values.spec.successfulJobsHistoryLimit }}
  failedJobsHistoryLimit: {{ .Values.spec.failedJobsHistoryLimit }}
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            {{- include "spark-driver.labels" . | nindent 12 }}

          annotations:
            iam.amazonaws.com/role: {{ .Values.spark_driver.iamRoleArn }}
          {{- if .Values.spark_driver.datadog.enabled }}
            ad.datadoghq.com/{{ .Release.Name }}.logs: '{{ toJson (fromYaml (tpl (.Files.Get "monitoring/custom_metrics.yaml") .)).logs }}'
            # label for existing template on file
            ad.datadoghq.com/{{ .Release.Name }}.check_names: '["spark"]'  # becomes instance tag in datadog
            ad.datadoghq.com/{{ .Release.Name }}.init_configs: '[{{ toJson (fromYaml (tpl (.Files.Get "monitoring/custom_metrics.yaml") .)).init_config }}]'
            ad.datadoghq.com/{{ .Release.Name }}.instances: '{{ toJson (fromYaml (tpl (.Files.Get "monitoring/custom_metrics.yaml") .)).instances }}'
          {{- end }}
        spec:
          volumes:
          - name: "{{ .Release.Name }}-configmap"
            configMap:
              name: "{{ .Release.Name }}-configmap"
          containers:
            - name: {{ .Release.Name }}
              image: "{{ .Values.spark_driver.image.repository }}:{{ .Values.spark_driver.image.tag }}"
              imagePullPolicy: {{ .Values.spark_driver.image.pullPolicy }}
              env:
              {{- range $key, $value := .Values.spark_driver.env }}
              - name: {{ $key | quote }}
                value: {{ tpl $value $ | quote }}
              {{- end }}
              resources:
                {{- toYaml .Values.spec.jobTemplate.spec.template.spec.containers.resources | nindent 16 }}
              volumeMounts:
              - name: "{{ .Release.Name }}-configmap"
                mountPath: "/opt/spark.properties"
                subPath: "spark.properties"
          restartPolicy: {{ .Values.spec.jobTemplate.spec.template.spec.restartPolicy }}
      backoffLimit: {{ .Values.spec.jobTemplate.spec.backoffLimit }}
      activeDeadlineSeconds: {{ .Values.spec.jobTemplate.spec.activeDeadlineSeconds }}
