# https://taskfile.dev

version: '2'

env:
  DOCKER_IMAGE: wikipedia_pageviews
  ENV: '{{default "minikube" .ENV}}'
  DOCKER_REGISTRY: '{{default "mrmuggymuggy" .DOCKER_REGISTRY}}'
  NAMESPACE: '{{default "default" .NAMESPACE}}'
  COMMIT:
    sh: git rev-parse --short HEAD

vars:
  KUBE_CONTEXT: '{{default "minikube" .KUBE_CONTEXT}}'
  HELM_CHART_NAME: wikipedia-pageviews-helm
  DEFAULT_SERVICES: |-
    wikipedia-pageviews

includes:
  dags: ./dags

tasks:

  lint:
    cmds:
      - pylint --exit-zero jobs

  format:
    cmds:
      - pip install pre-commit
      - pre-commit install
      - pre-commit run --all-files

  docker.build:
    cmds:
      - docker build -t $DOCKER_REGISTRY/$DOCKER_IMAGE:$COMMIT .

  jupyter:
    summary: |
      Local development with jupyter-notebook, fast feedback MVP
    cmds:
      #jupyter with latest spark
      - docker-compose up --abort-on-container-exit wikipedia_pageviews_jupyter

  local.run:
    summary: |
      Run the app locally with docker-compose
    cmds:
      - docker-compose up --abort-on-container-exit --build wikipedia_pageviews

  unit-tests:
    summary: |
      Run the unit-tests locally with docker-compose
    cmds:
      - docker-compose up --abort-on-container-exit --build wikipedia_pageviews_tests

  local.deploy:
    deps: [set.k8s.context]
    cmds:
      - |
        eval $(minikube docker-env)
        task docker:build
        task spark.helm.deploy

  start.minikube:
    cmds:
      - if minikube status | grep Running; then echo "minikube running..."; else echo "starting minikube"; minikube start; fi

  set.k8s.context:
    cmds:
      - kubectl config set-context {{.KUBE_CONTEXT}} --namespace=$NAMESPACE
      - kubectl config use-context {{.KUBE_CONTEXT}} --namespace=$NAMESPACE

  airflow.deploy:
    cmds:
      #my helm chart repo
      - helm repo add mrmuggymuggy https://mrmuggymuggy.github.io/helm-charts/
      - helm repo update
      - helm install airflow mrmuggymuggy/airflow --wait --timeout 600s

  airflow.undeploy:
    cmds:
      - helm uninstall airflow

  default:
    cmds:
      - echo 'executed on {{if ne .KUBE_CONTEXT "minikube"}}remote{{else}}local{{end}}'
    silent: true
